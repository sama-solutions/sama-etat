# Configuration des outils de développement pour SAMA ÉTAT
# Auteurs: Mamadou Mbagnick DOGUE, Rassol DOGUE

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "sama-etat"
version = "1.0.0"
description = "Plateforme citoyenne de gouvernance stratégique, opérationnelle et transparente"
readme = "README.md"
license = {text = "LGPL-3.0"}
authors = [
    {name = "Mamadou Mbagnick DOGUE", email = "mamadou@sama-etat.sn"},
    {name = "Rassol DOGUE", email = "rassol@sama-etat.sn"},
]
maintainers = [
    {name = "Mamadou Mbagnick DOGUE", email = "mamadou@sama-etat.sn"},
    {name = "Rassol DOGUE", email = "rassol@sama-etat.sn"},
]
keywords = ["odoo", "government", "senegal", "governance", "transparency", "projects"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Government",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Scientific/Engineering :: GIS",
]
requires-python = ">=3.8"
dependencies = [
    "qrcode[pil]>=7.4.0",
    "Pillow>=10.0.0",
    "geopy>=2.3.0",
    "folium>=0.14.0",
    "requests>=2.31.0",
    "python-dateutil>=2.8.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.3.0",
    "coverage>=7.3.0",
    "black>=23.9.0",
    "flake8>=6.1.0",
    "isort>=5.12.0",
    "mypy>=1.6.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "coverage>=7.3.0",
]
security = [
    "bandit>=1.7.5",
    "safety>=2.3.5",
]

[project.urls]
Homepage = "https://github.com/loi200812/sama-etat"
Documentation = "https://github.com/loi200812/sama-etat/wiki"
Repository = "https://github.com/loi200812/sama-etat.git"
"Bug Tracker" = "https://github.com/loi200812/sama-etat/issues"
Changelog = "https://github.com/loi200812/sama-etat/blob/main/CHANGELOG.md"

# Configuration Black
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Répertoires à exclure
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
  | archive_files
  | node_modules
)/
'''

# Configuration isort
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = [
    "*/migrations/*",
    "*/archive_files/*",
    "*/node_modules/*",
    "*/.git/*",
    "*/.tox/*",
    "*/venv/*",
    "*/env/*",
]
known_odoo = ["odoo", "odoo.addons"]
known_first_party = ["sama_etat"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "ODOO", "FIRSTPARTY", "LOCALFOLDER"]

# Configuration mypy
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "odoo.*",
    "odoo.addons.*",
    "qrcode.*",
    "PIL.*",
    "geopy.*",
    "folium.*",
]
ignore_missing_imports = true

# Configuration pytest
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--color=yes",
    "--durations=10",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html:coverage/html",
    "--cov-report=xml:coverage/coverage.xml",
    "--cov-fail-under=80",
    "--junit-xml=reports/pytest-report.xml",
]
markers = [
    "unit: Tests unitaires",
    "integration: Tests d'intégration",
    "functional: Tests fonctionnels",
    "performance: Tests de performance",
    "security: Tests de sécurité",
    "slow: Tests lents",
    "fast: Tests rapides",
    "odoo: Tests spécifiques à Odoo",
    "api: Tests d'API",
    "ui: Tests d'interface utilisateur",
    "database: Tests de base de données",
    "geolocation: Tests de géolocalisation",
    "senegal: Tests spécifiques au Sénégal",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:requests.*",
]

# Configuration coverage
[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "*/__pycache__/*",
    "*/node_modules/*",
    "*/archive_files/*",
    "setup.py",
    "conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "coverage/html"

[tool.coverage.xml]
output = "coverage/coverage.xml"

# Configuration bandit (sécurité)
[tool.bandit]
exclude_dirs = [
    "tests",
    "archive_files",
    "node_modules",
    ".git",
    ".tox",
    "venv",
    "env",
]
skips = ["B101", "B601"]  # Skip assert_used et shell_injection pour les tests

# Configuration setuptools
[tool.setuptools]
packages = ["sama_etat"]
include-package-data = true

[tool.setuptools.package-data]
sama_etat = [
    "data/*.xml",
    "data/*.csv",
    "security/*.xml",
    "security/*.csv",
    "views/*.xml",
    "wizard/*.xml",
    "static/**/*",
    "templates/*.xml",
    "i18n/*.po",
    "i18n/*.pot",
]