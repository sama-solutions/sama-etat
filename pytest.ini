[tool:pytest]
# Configuration pytest pour SAMA ÉTAT
# Auteurs: Mamadou Mbagnick DOGUE, Rassol DOGUE

# Répertoires de tests
testpaths = tests

# Patterns de fichiers de test
python_files = test_*.py *_test.py

# Patterns de classes de test
python_classes = Test*

# Patterns de fonctions de test
python_functions = test_*

# Marqueurs de test
markers =
    unit: Tests unitaires
    integration: Tests d'intégration
    functional: Tests fonctionnels
    performance: Tests de performance
    security: Tests de sécurité
    slow: Tests lents
    fast: Tests rapides
    odoo: Tests spécifiques à Odoo
    api: Tests d'API
    ui: Tests d'interface utilisateur
    database: Tests de base de données
    geolocation: Tests de géolocalisation
    senegal: Tests spécifiques au Sénégal

# Options par défaut
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --cov=.
    --cov-report=term-missing
    --cov-report=html:coverage/html
    --cov-report=xml:coverage/coverage.xml
    --cov-fail-under=80
    --junit-xml=reports/pytest-report.xml

# Répertoires à ignorer
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    __pycache__
    .pytest_cache
    node_modules
    archive_files

# Filtres d'avertissements
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*

# Variables d'environnement pour les tests
env =
    TEST_MODE = true
    ODOO_RC = config/odoo.test.conf
    POSTGRES_DB = test_sama_etat
    POSTGRES_USER = test_user
    POSTGRES_PASSWORD = test_password

# Timeout pour les tests (en secondes)
timeout = 300

# Parallélisation des tests
# Décommentez pour activer la parallélisation
# addopts = -n auto

# Configuration de couverture
[coverage:run]
source = .
omit = 
    */tests/*
    */test_*
    */migrations/*
    */venv/*
    */env/*
    */__pycache__/*
    */node_modules/*
    */archive_files/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = coverage/html

[coverage:xml]
output = coverage/coverage.xml